<?xml version="1.0"?>

<!-- Launches differential drive and robot localization -->

<launch>
  <!-- Namespace must be unique. -->
  <arg name="ns" default="argos"/>
  <arg name="x"     default="0"/>
  <arg name="y"     default="0"/>
  <arg name="z"     default="0"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="0"/>
  <arg name="use_global_ekf" default="true"/>
  <!-- Load the controller parameters. Also add the namespace to the frames.-->
  <rosparam command="load" 
            file="$(find argos_control)/config/control.yaml" 
            ns="$(arg ns)"
  />
  <param name="$(arg ns)/argos_velocity_controller/odom_frame_id" value="odom"/>
  <param name="$(arg ns)/argos_velocity_controller/base_frame_id" value="base_link"/>
  
  <!-- Spawn the ARGOS controls. -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
      args="argos_joint_publisher argos_velocity_controller" ns="$(arg ns)">
  </node>

  <!-- Robot localization, takes IMU and wheel odometry to form a single localisation
       estimate. This is the local filter, providing the odom to base_link transformation. -->
  <node pkg="robot_localization" type="ekf_localization_node" name="local_ekf_localization" ns="$(arg ns)">
    <rosparam command="load" file="$(find argos_control)/config/local_ekf.yaml"/>
    <param name="publish_tf" value="true" />
    <param name="map_frame"       value="map"/>
    <param name="odom_frame"      value="odom"/>
    <param name="base_link_frame" value="base_link"/>
    <param name="world_frame"     value="odom"/>
    <remap from="odometry/filtered" to="odometry/local_filtered"/>
  </node>

  <!-- Robot localization, takes GPS signals and fuses them with local odometry
       to form a single localisation estimate. This is the global filter, providing
       the map to odom transformation. -->
  <group if="$(arg use_global_ekf)">
    <node ns="$(arg ns)" pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" output="screen">
      <param name="publish_tf" value="true" />
      <param name="delay"                        value="5.0"/>
      <param name="yaw_offset"                   value="1.5707963"/>
      <param name="magnetic_declination_radians" value="0.13759"/>
      <param name="zero_altitude"                value="true"/>
      <param name="broadcast_utm_transform"      value="true"/>
      <param name="publish_filtered_gps"         value="true"/>
      <remap from="imu/data"          to="imu/data"/>
      <remap from="odometry/filtered" to="odometry/global_filtered"/>
    </node>
    <node pkg="robot_localization" type="ekf_localization_node" name="global_ekf_localization" ns="$(arg ns)" clear_params="true">
      <rosparam command="load" file="$(find argos_control)/config/global_ekf.yaml"/>
      <param name="publish_tf" value="true" />
      <param name="map_frame"       value="map"/>
      <param name="odom_frame"      value="odom"/>
      <param name="base_link_frame" value="base_link"/>
      <param name="world_frame"     value="map"/>
      <rosparam param="initial_state" subst_value="true">
         [   $(arg x),     $(arg y),   $(arg z),
          $(arg roll), $(arg pitch), $(arg yaw),
                  0.0,          0.0,        0.0,
                  0.0,          0.0,        0.0,
                  0.0,          0.0,        0.0]
      </rosparam>
      <remap from="odometry/filtered" to="odometry/global_filtered"/>
    </node>
  </group>


<!--   <node pkg="follow_waypoints" type="follow_waypoints" name="follow_waypoints" output="screen" clear_params="true">
    <param name="ns"            value="/argos"/>
    <param name="goal_frame_id" value="map"/>
  </node>
   -->
</launch>


